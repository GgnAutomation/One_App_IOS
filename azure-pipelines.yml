# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java
trigger:
  branches:
    exclude:
    - DEV
    - UAT

schedules:
- cron: '30 23 * * *'
  displayName: Daily build
  branches:
    include:
    - main
  always: true

pool:
  vmImage: ubuntu-latest

steps:
- task: Maven@3
  timeoutInMinutes: 150
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'clean install'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.17'
    mavenVersionOption: 'Default'
    mavenOptions: '-Xmx3072m'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false

# - task: CopyFiles@2
#   inputs:
#     SourceFolder: '$(agent.builddirectory)'
#     Contents: '**/Report/Test-Report*'
#     TargetFolder: '$(build.artifactstagingdirectory)'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)'
    Contents: '**/surefire-reports/TEST-*.xml'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit' 
    testResultsFiles: '**/surefire-reports/TEST-*.xml'


- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      # Parse test results
      $testReportPath = "$(Build.ArtifactStagingDirectory)/Test-Report.xml"
      $testResults = [xml] (Get-Content $testReportPath)
      $passedTests = $testResults.testsuites.testsuite | Where-Object {$_.failures -eq '0'} | ForEach-Object {$_.name}
      $failedTests = $testResults.testsuites.testsuite | Where-Object {$_.failures -ne '0'} | ForEach-Object {$_.name}

      # Define email bodies
      $passedBody = "The following tests passed:`n" + ($passedTests -join "`n")
      $failedBody = "The following tests failed:`n" + ($failedTests -join "`n")

      # Send emails
      $smtpServer = "smtp.gmail.com"
      $smtpPort = 25
      $smtpUsername = "magento20s@gmail.com"
      $smtpPassword = "lrprwymolzftyvqq"

      Send-MailMessage -From "magento20s@gmail.com" -To "dubey.vishal@orangemantra.in" -Subject "UI Test Results - Passed" -Body $passedBody -SmtpServer $smtpServer -Port $smtpPort -Credential (New-Object System.Management.Automation.PSCredential ($smtpUsername, (ConvertTo-SecureString $smtpPassword -AsPlainText -Force))) -UseSsl
      Send-MailMessage -From "magento20s@gmail.com" -To "secure@orangemantra.in" -Subject "UI Test Results - Failed" -Body $failedBody -SmtpServer $smtpServer -Port $smtpPort -Credential (New-Object System.Management.Automation.PSCredential ($smtpUsername, (ConvertTo-SecureString $smtpPassword -AsPlainText -Force))) -UseSsl