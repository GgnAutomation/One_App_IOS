# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java
trigger:
  branches:
    exclude:
    - DEV
    - UAT

schedules:
- cron: '30 23 * * *'
  displayName: Daily build
  branches:
    include:
    - main
  always: true

pool:
  vmImage: ubuntu-latest

variables:
  isMainStageSuccessful: 'false'

stages:
- stage: BuildAndTest
  jobs:
  - job: MavenBuild
    steps:
    - task: Maven@3
      timeoutInMinutes: 150
      continueOnError: true
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'clean install'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenVersionOption: 'Default'
        mavenOptions: '-Xmx3072m'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false

    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/surefire-reports/TEST-*.xml'

    - bash: |
        echo "Listing contents of surefire-reports directory:"
        ls -l $(System.DefaultWorkingDirectory)/target/surefire-reports
      displayName: 'List Surefire Reports'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)/target'
        Contents: '**/surefire-reports/testng-results.xml'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      condition: always()
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'testng-results'
        publishLocation: 'Container'

    - bash: |
        echo "Running Python analysis on test results..."
        python analyze_test_results.py "$(Build.ArtifactStagingDirectory)/testng-results.xml"
      displayName: 'Analyze Test Results'
      env:
        PYTHONIOENCODING: 'UTF-8'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Analyzed Test Results'
      inputs:
        PathtoPublish: '.'
        ArtifactName: 'analyzed-test-results'
        publishLocation: 'Container'
        Contents: '**/*.csv'

    - bash: |
        echo "##vso[task.setvariable variable=isMainStageSuccessful]true"
      condition: succeeded()
