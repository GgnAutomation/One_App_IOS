# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java
trigger:
  branches:
    exclude:
    - DEV
    - UAT

schedules:
- cron: '30 23 * * *'
  displayName: Daily build
  branches:
    include:
    - main
  always: true

pool:
  vmImage: ubuntu-latest

variables:
  isMainStageSuccessful: 'false'

stages:
- stage: BuildAndTest
  jobs:
  - job: MavenBuild
    steps:
    - task: Maven@3
      timeoutInMinutes: 150
      continueOnError: true
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'clean install'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        mavenVersionOption: 'Default'
        mavenOptions: '-Xmx3072m'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false

    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/surefire-reports/TEST-*.xml'

    - bash: |
        echo "Listing contents of surefire-reports directory:"
        ls -l $(System.DefaultWorkingDirectory)/target/surefire-reports
      displayName: 'List Surefire Reports'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)/target'
        Contents: '**/surefire-reports/testng-results.xml'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      condition: always()
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'testng-results'
        publishLocation: 'Container'
    
    - bash: |
        echo "Checking the presence of testng-results.xml..."
        ls -l $(Build.ArtifactStagingDirectory)
      displayName: 'Check testng-results.xml Presence'

    - bash: |
        echo "Installing Python dependencies with retry logic..."
        for i in {1..3}; do  # Retry loop
            python -m pip install --upgrade pip && pip install pandas && break || sleep 15
        done
      displayName: 'Install Python Dependencies'
      timeoutInMinutes: 10

    - bash: |
        echo "Running Python analysis on test results..."
        python analyze_test_results.py "$(Build.ArtifactStagingDirectory)/surefire-reports/testng-results.xml"
      displayName: 'Analyze Test Results'
      env:
        PYTHONIOENCODING: 'UTF-8'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Analyzed Test Results'
      inputs:
        PathtoPublish: '.'
        ArtifactName: 'analyzed-test-results'
        publishLocation: 'Container'
        Contents: 'passed_tests.csv, failed_tests.csv'

    - bash: |
        echo "##vso[task.setvariable variable=isMainStageSuccessful]true"
      condition: succeeded()

- stage: SendEmail
  jobs:
    - job: EmailJob
      pool:
        name: Default
        vmImage: 'AZCISONARVM01T'
      steps:
        - download: current
          artifact: analyzed-test-results

        # Task to send passed_tests.csv
        - task: PowerShell@2
          inputs:
            targetType: 'inline'
            script: |
              $smtpServer = 'smtp-relay.gmail.com'
              $smtpUsername = 'devsecops.one@heromotocorp.com'
              $smtpPassword = 'tmnv vmgz rogp huty'
              $from = 'devsecops.one@heromotocorp.com'
              $to = 'dubey.vishal@orangemantra.in'
              $cc = 'johar.aditya@orangemantra.in','siddhant.mehta@heromotocorp.com','anil1.singh@heromotocorp.com','siddhant.mehta@heromotocorp.com'
              $subject = 'Customer One App Android :Success UI Test'
              $body = "<i>Hi Team, <br><br>I hope this email finds you well.</br> I'm pleased to inform you that UI tests run for <b>Customer One App Android</b> have passed successfully during the test execution cycle. Please find the attached details report for your reference.<br> This is a system generated mail from devsecops . Please do not reply to this email!.</br></i>"
              $attachment = "$(Pipeline.Workspace)/analyzed-test-results/passed_tests.csv"

              $smtp = New-Object Net.Mail.SmtpClient($smtpServer)
              $smtp.EnableSsl = $true
              $smtp.Credentials = New-Object System.Net.NetworkCredential($smtpUsername, $smtpPassword)

              $msg = New-Object Net.Mail.MailMessage
              $msg.From = $from
              $msg.TO.Add($to)
              foreach ($ccRecipient in $cc) { $msg.CC.Add($ccRecipient) }
              $msg.Subject = $subject
              $msg.Body = $body
              $msg.IsBodyHtml = $true

              $attachment = New-Object Net.Mail.Attachment($attachment)
              $msg.Attachments.Add($attachment)

              $smtp.Send($msg)

        # Task to send failed_tests.csv
        - task: PowerShell@2
          inputs:
            targetType: 'inline'
            script: |
              $smtpServer = 'smtp-relay.gmail.com'
              $smtpUsername = 'devsecops.one@heromotocorp.com'
              $smtpPassword = 'tmnv vmgz rogp huty'
              $from = 'devsecops.one@heromotocorp.com'
              $to = 'dubey.vishal@orangemantra.in'
              $cc = 'johar.aditya@orangemantra.in','siddhant.mehta@heromotocorp.co','anil1.singh@heromotocorp.com','siddhant.mehta@heromotocorp.com'
              $subject = 'Customer One App Android: Failed UI Test'
              $body = "<i>Hi Team, <br><br>I hope this email finds you well.</br> I regret to inform you that some of the UI tests failed for <b>Customer One App Android</b> during the test execution cycle . Please find the comprehensive report, verify the issues and fix these issues.<br> This is a system generated mail from devsecops. For any query please reach out to the QA Team!.</br></i>"
              $attachment = "$(Pipeline.Workspace)/analyzed-test-results/failed_tests.csv"

              $smtp = New-Object Net.Mail.SmtpClient($smtpServer)
              $smtp.EnableSsl = $true
              $smtp.Credentials = New-Object System.Net.NetworkCredential($smtpUsername, $smtpPassword)

              $msg = New-Object Net.Mail.MailMessage
              $msg.From = $from
              $msg.TO.Add($to)
              foreach ($ccRecipient in $cc) { $msg.CC.Add($ccRecipient) }
              $msg.Subject = $subject
              $msg.Body = $body
              $msg.IsBodyHtml = $true

              $attachment = New-Object Net.Mail.Attachment($attachment)
              $msg.Attachments.Add($attachment)

              $smtp.Send($msg)
